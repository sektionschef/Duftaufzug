class Lines{constructor(t,i,e){this.pointA=t,this.pointB=i,this.direction=e,this.blur=3,this.strokeWeight=5,this.localMargin=BACKGROUNDMARGIN-50,this.buffer=createGraphics(rescaling_width,rescaling_height),this.marginBuffer=createGraphics(rescaling_width,rescaling_height),this.marginBuffer.fill(color(colors[PALETTE].duft)),this.marginBuffer.noStroke(),this.marginBuffer.rect(this.localMargin/exportRatio,this.localMargin/exportRatio,(exportPaper.width-2*this.localMargin)/exportRatio,(exportPaper.height-2*this.localMargin)/exportRatio),this.draw()}draw(){this.buffer.push(),this.buffer.drawingContext.filter=`blur(${this.blur}px)`,this.buffer.stroke(color(colors[PALETTE].duft)),this.buffer.strokeWeight(this.strokeWeight/exportRatio);var t=this.pointA.x-this.pointB.x,i=this.pointA.y-this.pointB.y;this.angle=atan(i/t),"left"==this.direction?(this.angle=this.angle-PI,this.buffer.translate(this.pointA.x/exportRatio,this.pointA.y/exportRatio)):"up"==this.direction?(this.angle<0&&(this.angle=this.angle-PI),this.angle=this.angle-PI,this.buffer.translate(this.pointA.x/exportRatio,this.pointA.y/exportRatio)):"down"==this.direction?(this.angle<0&&(this.angle=this.angle-PI),this.buffer.translate(this.pointB.x/exportRatio,this.pointB.y/exportRatio)):"right"==this.direction?this.buffer.translate(this.pointB.x/exportRatio,this.pointB.y/exportRatio):console.log("specify direction");let e=p5.Vector.fromAngle(this.angle,4e3/exportRatio);this.buffer.line(0,0,e.x,e.y),this.buffer.drawingContext.filter="none",this.buffer.pop(),this.buffer=maskBuffers(this.marginBuffer,this.buffer),this.draw_debug()}draw_debug(){5==MODE&&(this.buffer.push(),this.buffer.stroke("green"),this.buffer.strokeWeight(50/exportRatio),this.buffer.point(this.pointA.x/exportRatio,this.pointA.y/exportRatio),this.buffer.pop(),this.buffer.push(),this.buffer.stroke("white"),this.buffer.strokeWeight(50/exportRatio),this.buffer.point(this.pointB.x/exportRatio,this.pointB.y/exportRatio),this.buffer.pop())}}